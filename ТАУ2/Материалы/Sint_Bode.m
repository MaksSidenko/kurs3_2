% Синтез послідовного корегуючого пристрою методом ЛАЧХ 
% для лінійного об'єкта керування 
clc
clear all

%=================== Вихідні дані =======================================
%________________________________________________________________

% %                    320
% % WOBJ = ----------------------------
% %        s(0.01s+1)(0.014s+1)(0.1s+1)

tr=1;       % бажаний час регулювання
kob=320;     % загальний коеф. передачі об'єкта керування (ОК)
kv=10; %320;      % kv бажаний коеф. передачі розімкнутого контуру САК
kreg=kv/kob; % коеф. передачі регулятора
klan=4;      % кількість ланок в передавальній функції об'єкта керування

% arn 1...arn klan  масиви чисельників ланок ОК
% ard 1...ard klan  масиви знаменників ланок ОК

arn1=[0 1]; 
ard1=[1 0]; 

arn2=[0 1];
ard2=[0.01 1];

arn3=[0 1];
ard3=[0.014 1];

arn4=[0 1];
ard4=[0.1 1];

zapsv=20.5;   
zapsn=16;  
wzr=17;      
%________________________________________________________________


% %                             162
% % WOBJ = ---------------------------------------
% %        s(0.016s+1)(0.042^2s^2+2*0.03*0.042s+1)
% 
% tr=1.4;      % час регулювання
% kob=1624;    % загальний коеф. передачі об'єкта керування (ОК)
% kv=162;      % kv бажаний коеф. передачі розімкнутого контуру САК
% kreg=kv/kob; % коеф. передачі регулятора
% klan=3;      % кількість ланок в передавальній функції об'єкта керування
% 
% arn1=[0 1]; % arn 1...arn klan  масиви чисельників ланок ОК
% ard1=[1 0]; % ard 1...ard klan  масиви знаменників ланок ОК
%  
% arn2=[0 1];
% ard2=[0.016 1];
% 
% arn3=[0 1];
% ard3=[0.042^2 2*0.03*0.042 1];
% 
% zapsv=16.7;  
% zapsn=18.;    
% wzr=10;      
 
% %____________________________________________________________________
% 
% %                  200(0.01s^2+0.03*2*0.1s+1)(0.1s+1)
% % WOBJ = --------------------------------------------------------
% %        s(0.012s+1)(0.012^2s^2+2*0.07*0.012s+1)(0.08s+1)(0.2s+1)
% 
% tr=0.5;      % час регулювання
% wzr=4*pi/tr;  % завдана частота зрізу
% 
% kob=1000;    % загальний коеф. передачі об'єкта керування (ОК)
% kv=200;      % kv бажаний коеф. передачі розімкнутого контуру САК
% kreg=kv/kob; % коеф. передачі регулятора
% klan=7;      % кількість ланок в передавальній функції об'єкта керування
% 
% arn1=[0 1]; % arn 1...arn klan  масиви чисельників ланок ОК
% ard1=[1 0]; % ard 1...ard klan  масиви знаменників ланок ОК
% 
% arn2=[0 1];
% ard2=[0.012 1];
% 
% arn3=[0.01 0.03*2*0.1 1];
% ard3=[0 1];
% 
% arn4=[0.1 1];
% ard4=[0 1];
% 
% arn5=[0 1];
% ard5=[0.012^2 2*0.07*0.012 1];
% 
% arn6=[0 1];
% ard6=[0.008 1];
% 
% arn7=[0 1];
% ard7=[0.2 1];
% 
% zapsv=20;   
% zapsn=16;  
% wzr=95;


%____________________________________________________________________


% %                       2(5s+1)
% % WOBJ = ----------------------------------  Груздєв В
% %         s^2(s+1)(6^2 s^2 + 2*0.5*6 s + 1)
% 
% tr=100;      % час регулювання tr=40
% kob=1624;    % загальний коеф. передачі об'єкта керування (ОК)
% kv=40;      % kv бажаний коеф. передачі розімкнутого контуру САК
% kreg=kv/kob; % коеф. передачі регулятора
% klan=5;      % кількість ланок в передавальній функції об'єкта керування
% 
% arn1=[0 1]; % arn 1...arn klan  масиви чисельників ланок ОК
% ard1=[1 0]; % ard 1...ard klan  масиви знаменників ланок ОК
%  
% arn2=[0 1];
% ard2=[1 1];
% 
% arn3=[0 1];
% ard3=[6^2 2*0.5*6 1];
% 
% arn4=[5 1];
% ard4=[0 1];
% 
% arn5=[0 1]; 
% ard5=[1 0];
% 
% zapsv=27;  
% zapsn=20;    
% wzr=0.35;
% hw=0.00001; 
% wpr=10;
% nahn=80;
% nahv=20;
%=========================================================================

zapsv=20;   % ордината лівого кінця середнточастотної асимптоти
              % бажаної ЛАЧХ, дБ
zapsn=20;   % запас стійкості, дБ  
wzr=15;     % завдана частота зрізу 
kbb=0;  % Вибір бажаної ЛАЧХ: 0 - спрощена, 1- класична
% ЛАЧХ будуються в діапазоні частот wlv...wpr рад/с з  кроком hw рад/с
hw=0.001; 
wpr=1000;
wlv=hw;
w=wlv:hw:wpr;
nahn=40; % нахил низькочастотної з'єднувальної асимптоти bc. Її рівняння
         % Ln-nahn*log10(w)
nahv=20; % нахил високочастотної з'єднувальної асимптоти aan. Її рівняння
         % Lv-nahv*log10(w)
         
         
% ----- Визначення ланок, передавальної функції та асимптотичної ЛАЧХ
%    --------- об'єкта керування 
WOBJ=kv;
bv=20*log10(kv); % масив з асимптотичною ЛАЧХ об'єкта керування

for r=1:klan
    nom=eval(['arn' num2str(r)]); % масив коеф. чисельника r-тої ланки ОК
    den=eval(['ard' num2str(r)]); % масив коеф. знаменника r-тої ланки ОК
    
    if (length(nom)==2)&&(nom(1)) % форсуюча ланка
        asn=(20*log10(nom(1).*w)).*(w>=1./nom(1));
        else
        asn=0;           
    end
    if length(nom)==3 % ланка другого порядку в чисельнику ПФ ОК
        asn=(40*log10(sqrt(nom(1)).*w)).*(w>=1./sqrt(nom(1)));
    end
    if length(den)==2 % інтегратор або інерційна ланка
        if (den(1)==1)&&(den(2)==0) % інтегратор 
            asd=-20*log10(w);
        else
            if den(1)&&den(2)
              asd=(-20*log10(den(1).*w)).*(w>=1./den(1)); % інерційна ланка
            end
        end
    end
     if length(den)==3 % ланка другого порядку в знаменнику ПФ
        asd=(-40*log10(sqrt(den(1)).*w)).*(w>=1./sqrt(den(1)));
        ksid=den(2)./(2*sqrt(den(1)));
     end
    bv=bv+asn+asd;
    disp(['Ланка ' num2str(r)])
    W=tf(nom,den)
    WOBJ=WOBJ*W;
    
end
% -------------------------------------------------------------------------

WOBJ
WOBJ=minreal(WOBJ)
zpk_WOBJ=zpk(WOBJ)
[nob,dob]=tfdata(WOBJ,'v'); % масиви коефіцієнтів поліномів чисельника nob
                            % і знаменника dob ПФ ОК
rn=roots(nob); % корені поліному чисельника ПФ ОК
rd=roots(dob); % корені поліному знаменника ПФ ОК
wsn=abs(rn); % частоти поліному чисельника ПФ ОК
wsd=abs(rd); % частоти поліному знаменника ПФ ОК
%ksid=-real(rd)./wsd;
ksin=-real(rn)./wsn;
pas=find(wsd==0, 1, 'last' ); % Порядок астатизму вихідної системи

if isempty(pas)
    pas=0;
end
zsn(1:length(w))=-zapsn;
zsv(1:length(w))=zapsv;
plot(log10(w),zsn,'g',log10(w),zsv,'g')% лінії рівнів запасу стійкості

[mag] = bode(WOBJ,w);
hold on
plot(log10(w),20*log10(mag(:)))% графік  ЛАЧХ  вихідної системи
hold on
figure(1)

bv=20*log10(kv)-pas*20*log10(w); % масив з асимптотичною ЛАЧХ ОК
for r=1:length(wsn)
    bv=bv+(20*log10(1./wsn(r).*w)).*(w>=wsn(r));
end
 for r=pas+1:length(wsd)
    bv=bv+(-20*log10((1./wsd(r)).*w)).*(w>=wsd(r));
end

plot(log10(w),bv,'r') % графік асимптотичної ЛАЧХ  вихідної системи
hold on
grid on
% ______________Побудова бажаної асимптотичної ЛАЧХ________________________
if ~kbb % якщо kbb =0, використовується спрощенв методика побудови бажаної
        % ЛАЧХ, якщо kbb не 0 - будується класична ЛАЧХ    
 
        % Бажана ЛАЧХ спрощена

% Згідно з методикою отримаємо частоту wa в точці а, на якій перетинаається
% асимптотична ЛАЧХ розімкнутої вихідної системи з рівнем -zapsn. Пошук wa
% полягає в знаходженні індексу елементу масива bv, який мінімально за 
% модулем відрізняється від рівня -zapsn. Візміть до уваги, що індекс
% масивів bv, bb, bс пов'язаний з частотою w співвідношенням
% частота=hw*індекс
[m,wa]=min(abs(bv+zapsn));
wa=hw*wa;                      
wan=wa;
% Бажана асимптотична ЛАЧХ формується в масиві bb.  За методикою
% високочастотна частина бажаної ЛАЧХ співпадає з вихідною ЛАЧХ,
% починаючи з точки а, тобто з частоти wa. Тому елементи масива bb,
% починаючи з елемента з індексом round(1/hw*wa)
%(індекс=округлено(1/hw*частота) при  кроці по частоті hw рад/с), отримують
% значення відповідних елементів масива bv.
bb(round(1/hw*wa):length(w))=bv(round(1/hw*wa):length(w));

% Далі отримаємо рівняння середньочастотної ділянки бажаної ЛАЧХ
% для формування масива bb та для визначення координат лівого кінця
% середньочастотної ділянки бажаної ЛАЧХ - точки b. 
Ls=-zapsn+20*log10(wa); % ордината точки пересічення продовження
% середньочастотної асимптоти ab з віссю ординат L.
% Частота wb в точці b  визначається з рівняння L0s-20*log10(wb)=zaps,
% звідки
wb=10.^((Ls-zapsv)/20);
bb(round(1/hw*wb):round(1/hw*wa))=...
    Ls-20*log10(w(round(1/hw*wb):round(1/hw*wa)));

%plot(log10(w(round(1/hw*wb):round(1/hw*wa))),...
    %bb(round(1/hw*wb):round(1/hw*wa)),'r','LineWidth',2)
% Виходячи з тих же міркувань що й для отримання рівняння середньочастотної
% асимптоти бажаної ЛАЧХ, отримаємо рівняння асимптоти bc, що з'єднує
% середньочастотну ділянку бажаної ЛАЧХ з вихідною ЛАЧХ. Асимптота bc має
% нахил -40дБ/дек (може мати -60дБ/дек).
Ln=zapsv+nahn*(log10(wb));  % ордината точки перетину продовження
% з'єднувальної асимптоти bc з віссю ординат L. 
wc=10.^((20*log10(kv)-Ln)/(pas*20-nahn));
bb(round(1/hw*wc):round(1/hw*wb))=...
    Ln-nahn*log10(w(round(1/hw*wc):round(1/hw*wb)));
% Асимптота бажаної ЛАЧХ  до частоти wc співпадає з вихідною, тому
bb(1:round(1/hw*wc))=bv(1:round(1/hw*wc)); 
%plot(log10(w),L0c-40*log10(w),'--')
plot(log10(w),bb,'black','LineWidth',1.2)

else
% Бажана ЛАЧХ класична

Ls=20*log10(wzr); % ордината точки пересічення продовження
                  % середньочастотної асимптоти ab з віссю ординат L.
wa=10.^((Ls+zapsn)./20); % частота,на якій середньочастотна асимптота
                        % перетинає рівень zapsn (точка а)
wb=10.^((Ls-zapsv)./20);  % частота,на якій середньочастотна асимптота
                         % пересікає рівень zapsv (точка b)
bb(round(1/hw*wb):round(1/hw*wa))=... % середньочастотна асимптота
    Ls-20*log10(w(round(1/hw*wb):round(1/hw*wa))); % бажаної ЛАЧХ                     
% nahv нахил високочастотної з'єднувальної асимптоти aan. Її рівняння
         % Lv-nahv*log10(w)
Lv=nahv*log10(wa)-zapsn; % ордината точки пересічення продовження
                        % високочастотної асимптоти aan з віссю ординат L
                     
[dfr,iwan]=min(abs(bv(round(1/hw*wa):round(1/hw*wpr))-...   % функція min 
(Lv-nahv*log10(w(round(1/hw*wa):round(1/hw*wpr))))));   % повертає індекс
  % частоти iwan, на якій перетинається високочастотна асимптота бажаної
  % ЛАЧХ  з високочастотною асимптотою об'єкта керування - точка an
iwan=iwan+round(1/hw*wa); % оскільки нумерація індексів iwan починається
                          % з 1, а не з індексу round(1/hw*wa), як треба
%plot(log10(w(round(1/hw*wa):round(1/hw*wpr))),...
 %Lv-nahv*log10(w(round(1/hw*wa):round(1/hw*wpr))),'magenta','LineWidth',2)
wan=hw*iwan;
bb(round(1/hw*wa):round(1/hw*wan))=...
    Lv-nahv*log10(w(round(1/hw*wa):round(1/hw*wan)));
bb(round(1/hw*wan):round(1/hw*wpr))=bv(round(1/hw*wan):round(1/hw*wpr));

% nahn нахил низькочастотної з'єднувальної асимптоти bc. Її рівняння
         % Ln-nahn*log10(w)
Ln=zapsv+nahn*(log10(wb));  % ордината точки перетину продовження
                          % з'єднувальної низькочастотної асимптоти bc з
                          % віссю ординат L. 
%wc=10.^((Ln-20*log10(kv))/20);

wc=10.^((20*log10(kv)-Ln)/(pas*20-nahn));

[dfr,iwc]=min(abs(bv(round(1/hw*wlv):round(1/hw*wb))-...   % функція min 
(Ln-nahn*log10(w(round(1/hw*wlv):round(1/hw*wb))))));   % повертає індекс
  % частоти iwan, на якій перетинається високочастотна асимптота бажаної
  % ЛАЧХ  з високочастотною асимптотою об'єкта керування - точка an
%wc=hw*iwc              

bb(round(1/hw*wc):round(1/hw*wb))=...
    Ln-nahn*log10(w(round(1/hw*wc):round(1/hw*wb)));

% Асимптота бажаної ЛАЧХ  до частоти wc співпадає з вихідною, тому
bb(1:round(1/hw*wc))=bv(1:round(1/hw*wc));
%bb(round(1/hw*wan):length(w))=bv(round(1/hw*wan):length(w));
end % if ~kbb
plot(log10(w),bb,'black','LineWidth',1.)
wc
wb
wa
wan
 
%_______________Побудову бажаної ЛАЧХ завершено_____________________________

bc=bb-bv; % масив з асимптотичною ЛАЧХ послідовного коригувального пристрою
plot(log10(w),bc,'magenta')
wall=[wsn; wsd; wa; wb; wc; wan];    

%=========Отримання передавальної функції послідовного коригувального
% пристрою (регулятора) на основі аналізу його асимптотичної ЛАЧХ =======

% Визначення параметрів передавальної функції виконується шляхом
% знаходження частот в точках сполучення асимптот та зміни їх нахилів.
%Нахил  асимптоти визначається як відношення різниці ординат графіка bc в
% сусідніх к+1-шій та к-тій точках до інтервалу частоти між цими точками
% (по суті це знаходження похідної  функції асимптоти від частоти) з
% врахуванням логарифмічного масштабу.  Зауважимо, що внаслідок
% логарифмічного масштабу, відрізки частоти між сусідніми к+1-шою
% та к-тою точкою не є рівними. Це робить необхідним обчислення довжини
% такого відрізку для кожної нової пари точок.
Lhw=log10(wlv+hw)-log10(wlv);% крок по частоті між першим та другим
% елементами масива bc 
nahp=round((bc(2)-bc(1))./Lhw); % попередній (початковий) нахил першої
% асимптоти асимптотичної ЛАЧХ коригувального пристрою, далі це нахил 
% попередньої асимптоти.
nah=nahp; % новий нахил  асимптоти ЛАЧХ коригувального пристрою
kd=0; % кількість ланок у знаменнику передавальної функції регулятора
kn=0; % кількість ланок у чисельнику передавальної функції регулятора
dreg=1; % Початкове значення знаменни ка передавальної функції  регулятора
nreg=1; % Початкове значення чисельника передавальної функції  регулятора
Td=[];
Tn=[];
for k=1:length(w)-1 % Перебор частот (w=k*hw) в масиві bc в пошуку
                    % зміни нахилу асимптот в точках їх з'єднання
    Lhw=(log10((k+1)*hw)-log10(k*hw));
    if round(((bc(k+1)-bc(k))/Lhw))~=nahp % якщо нахил змінився.
        % Вираз round(((bc(k+1)-bc(k))/Lhw)) констатує зміну нахилу
        % асимптоти, але не дозволяє обчислити його точно через кінцеве 
        % значення відрізку частоти, де сталася зміна нахилу. Точне
        % значення нахилу знаходиться між двома сусідніми точками к+3 та
        % к+2, що розташовані праворуч від точки зміни нахилу
        Lhw=(log10((k+3)*hw)-log10((k+2)*hw)); 
        nah=round(((bc(k+3)-bc(k+2))/Lhw));% точне визначення нового нахилу
        [difw,iwall]=min(abs(wall-k*hw)); % Уточнення частоти, на якій
                                          % нахил змінився
        fric= wall(iwall); %  - точне значення частоти зміни нахилу
        if nah-nahp<0 % якщо зміна нахилу негативна,будуть додані корегуючі
                      % ланки в знаменник ПФ регулятора
             pldd=abs(nah-nahp)/20; % Порядок доданих ланок (кількість їх
                                    % керенів)  в знаменник ПФ регулятора
             irn=find(abs(wsn-fric)<1e-10); % Визначити індекси
                         % коренів (індекси нулів ПФ) в  чисельнику ПФ
                         % на частоті зміни нахилу
             if isreal(rn(irn)) % якщо нулі дійсні або відсутні
                 Td(kd+1:kd+pldd)=1./fric; % постійна часу
                 % коригувальної ланки,що додається в знаменник ПФ регулятора
                 tfidrr=1;
                 for pow=1:pldd
                     tfidrr=tfidrr*tf([0 1],[Td(kd+1) 1]);
                 end
                 dreg=dreg*tfidrr;
                 kd=kd+pldd;
             else % корені (нулі) комплексні або змішані, тобто в
                  % чисельнику ПФ є не менш ніж одна коливальна ланка на
                  % частоті зміни нахилу fric
                  icrn=find(imag(rn(irn))); % індекси комплексних коренів
                         % чисельника на частоті зміни нахилу fric
                  kcrn=length(icrn); % кількість комплексних коренів
                                 % чисельника на частоті зміни нахилу fric      
                  krrn=length(irn)-kcrn;  % кількість дійсних
                              % коренів (кількість інерційних ланок, що
                              % додадуться в знаменник ПФ)
                              % на частоті зміни нахилу fric
                  Td(kd+1:kd+krrn+kcrn/2)=1./fric;  % постійна часу всіх
                                               %  ланок,що додаються
                                               % в знаменник ПФ регулятора
                   ksi=ksin(icrn(1));
                   tfkd=1;
                   for pow=1:kcrn/2
                       tfkd=tfkd*tf(1,[Td(kd+1).^2 2*ksi*Td(kd+1) 1]);
                   end
                   dreg=dreg*tfkd;
                   tfid=1;
                   for pow=1:krrn
                       tfid=tfid*tf([0 1],[Tn(kd+1) 1]);
                   end
                   dreg=dreg*tfid;
                   kd=kd+ krrn+kcrn/2;                           
             end
        end %if nah-nahp<0 % якщо зміна нахилу негативна
        
        if nah-nahp>0 % якщо зміна нахилу позитивна,будуть додані
                      % коригувальні ланки в чисельник ПФ регулятора
             pldn=abs(nah-nahp)/20; % Порядок ланок (кількість їх керенів), 
                                  % що додаються  в чисельник ПФ регулятора
             ird=find(abs(wsd-fric)<1e-10); % Визначити індекси
                         % коренів (індекси полюсів ПФ) в  знаменнику ПФ
                         % на частоті зміни нахилу
             if isreal(rd(ird)) %якщо полюси дійсні або відсутні
                 Tn(kn+1:kn+pldn)=1./fric; % постійна часу коригувальної
                           % ланки,що додається в чисельник ПФ регулятора
                 tffnrr=1;
                 for pow=1:pldn
                     tffnrr=tffnrr*tf([Tn(kn+1) 1],[0 1]);
                 end
                 nreg=nreg*tffnrr;
                 kn=kn+pldn;
             else % корені (полюси) комплексні або змішані, тобто в
                  % знаменнику ПФ є не менш ніж одна коливальна ланка на
                  % частоті зміни нахилу fric
                  icrd=find(imag(rd(ird))); % індекси комплексних коренів
                         % знаменника на частоті зміни нахилу fric
                  kcrd=length(icrd); % кількість комплексних коренів
                         % знаменника на частоті зміни нахилу fric      
                  krrd=length(ird)-kcrd;  % кількість дійсних
                              % коренів (кількість інерційних ланок, що
                              % додадуться в чисельник ПФ)
                              % на частоті зміни нахилу wall(iwall)
                  Tn(kn+1:kn+krrd+kcrd/2)=1./fric;  % постійна часу всіх
                                               %  ланок,що додаються
                                               % в чисельник ПФ регулятора
                   ksi=ksid(icrd(1));
                   tfk=1;
                   for pow=1:kcrd/2
                       tfk=tfk*tf([Tn(kn+1).^2 2*ksi*Tn(kn+1) 1],1);
                   end
                   nreg=nreg*tfk;
                   tff=1;
                   for pow=1:krrd
                       tff=tff*tf([Tn(kn+1) 1],[0 1]);
                   end
                   nreg=nreg*tff;
                   kn=kn+ krrd+kcrd/2;                           
             end
        end % if nah-nahp>0 % якщо зміна нахилу позитивна
    end % if round(((bc(k+1)-bc(k))/Lhw))~=nahp % якщо нахил змінився
    nahp=nah;
end % Перегляд масиву bc з асимптотичною ЛАЧХ регулятора
        
%nreg
%dreg
Tn
Td
Wreg=nreg*dreg % передавальна функція регулятора
[nr,dr]=tfdata(Wreg,'v');
preg=length(roots(dr));
disp(['Порядок регулятора ' num2str(preg)]) 
%============== Передавальна функція регулятора отримана =================

% ++++++++++++++++++++Анотування рисунка++++++++++++++++++++++++

for n=1:kd
    text(log10(1./Td(n)),-50-6*(n-1),...
        ['1/Td' num2str(n) '=' num2str(1/Td(n))],'FontSize',8,...
    'HorizontalAlignment', 'left','BackgroundColor','white')
    plot([log10(1./Td(n)) log10(1./Td(n))],...
    [bc(round(1/(hw*Td(n))))-40-6*n bc(round(1/(hw*Td(n))))],'--')
end

for n=1:kn
    text(log10(1./Tn(n)),-35-6*(n-1),...
        ['1/Tn' num2str(n) '=' num2str(1/Tn(n))],'FontSize',8,...
    'HorizontalAlignment', 'right','BackgroundColor','white')
 plot([log10(1./Tn(n)) log10(1./Tn(n))],...
    [-35-5*(n-1) bc(round(1/(hw*Tn(n))))],'--')
end

if ~isempty(wsn)
    text(log10(wsn(1:length(wsn))), bv(round(1/hw*wsn(1:length(wsn)))),...
    '\color[rgb]{0.9 .2 .2}\bullet')
end

text(log10(wsd(pas+1:length(wsd))), bv(round(1/hw*wsd(pas+1:length(wsd)))),...
    '\color[rgb]{0.9 .2 .2}\bullet')

figure(1)
wzr=10.^(Ls/20) % обчислення частоти зрізу з рівняння L0s-20*log10(w)=0
text(log10(wzr), 0,'\color[rgb]{0.9 .2 .2}\bullet') % прорисовка значка
%  bullet • в точку з координатами (log10(wz), 0)
text(log10(wzr), -5,['wzr=' num2str(wzr)],'HorizontalAlignment',...
    'right','BackgroundColor','white')
Lmax=ceil(1+bv(1/hw*10.^floor(log10(wc)))/10)*10;
% axis([floor(log10(wc)) round(log10(wpr))...
%     ceil(bv(1/hw*wpr)./10)*10 ceil(1+bv(1/hw*10.^floor(log10(wc)))/10)*10])
% обмеження осей на рисунку

plot([0 0],[-60 Lmax-20],'cyan','LineWidth',1) % побудова осі L
text(0, 70,'L(w),дБ','HorizontalAlignment',...
    'right','BackgroundColor','white')

%  bullet • circ  \uparrow   \downarrow 
text(log10(wc), bb(round(1/hw*wc)),'\color[rgb]{0.2 .2 .9}\bullet')       
text(log10(wb), bb(round(1/hw*wb)),'\color[rgb]{0.2 .2 .9}\bullet')
text(log10(wa), -zapsn,'\color[rgb]{0.2 .2 .9}\bullet')
text(log10(wan), bb(round(1/hw*wan)),'\color[rgb]{0.2 .2 .9}\bullet')

text(log10(wan)+0.02, bb(round(1/hw*wan))+3,'an','FontSize',11)
text(log10(wa)+0.02, -zapsn+3,'a','FontSize',11) 
text(log10(wb)+0.02, bb(round(1/hw*wb))+3,'b','FontSize',11)       
text(log10(wc)+0.02, bb(round(1/hw*wc))+3,'c','FontSize',11)

text(log10(wb)-0.001, bv(round(1/hw*wb))+3,'Lва','FontSize',11,'color','red')
text(log10(wb)-0.02, bv(round(1/hw*wb))-5,'Lв','FontSize',11,'color','blue')       
text(log10(wb)-0.2, bb(round(1/hw*wb))+3,'Lб','FontSize',11,'color','black')
text(0.5*(log10(wc)+log10(wb)), -7,'Lc','FontSize',11,'color','magenta')

xlabel('lg(w), рад/c','FontSize',12,'Color','black')% підписи
ylabel('L, дБ','FontSize',12,'Color','black')       % на осях

text(log10(wpr)-0.6, -zapsn+2,'\downarrow','color', 'black') % вивід запасу
text(log10(wpr)-0.6, -3,'\uparrow','color', 'black')         % стійкості  
text(log10(wpr)-0.65, -zapsn*0.5,[' запас стійкості ' num2str(zapsn) ' дБ'],...
    'HorizontalAlignment','left','BackgroundColor','white')

text(log10(wpr)-0.6, zapsv-3,'\uparrow','color', 'black') % ордината
text(log10(wpr)-0.6, 2,'\downarrow','color', 'black')     % точки b  
text(log10(wpr)-0.6, zapsv*0.5,['   ' num2str(zapsv) ' дБ'],...
    'HorizontalAlignment','left','BackgroundColor','white')

%+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

%<<<<<<<<<<<<<< Редукування (зниження порядку) передавальної функції <<<<
%<<<<<<<<<<<<<<<<<<<<<<<<<<<    регулятора   <<<<<<<<<<<<<<<<<<<<<<<<<<<<

[h,bd]=hsvd(Wreg); % Обчислення сингулярних чисел Ганкеля
sys_balredp_1 = balred(Wreg,preg-1,bd) % Редуковання регулятора
                                       % до preg-1 порядку 
sys_balredp_2 = balred(Wreg,preg-2,bd) % Редуковання регулятора
                                       % до preg-2 порядку
figure(1)
[mag] = bode(sys_balredp_2*WOBJ,w); 
%plot(log10(w),20*log10(mag(:)),'r') % ЛАЧХ розімкнутої системи 
hold on                             % з регулятором preg-2 порядку

Wk=Wreg*WOBJ % передавальна функція скорегованої
% розімкнутої  системи з синтезованим регулятором 
Wk_min=minreal(Wk)
figure(1)
[mag] = bode(Wk,w);
plot(log10(w),20*log10(mag(:)),'magenta--','LineWidth',1) %ЛАЧХ розімкнутої
                                  % системи з синтезованим регулятором
[mag,phaze] = bode(Wk,wzr);
grid on
zphaze=round(180+phaze)
wz=feedback(Wk,1);
[y,t]=step(wz,0:0.01:2*tr);
ytr=y(round(tr/0.01)+1)-1 % Відхилення регульованої величини в час tr
sigma_reg=max(y)-1        % Перерегулювання
text(log10(wpr)-1,...
Lmax-20,['Перерегулювання ' num2str(round(sigma_reg*1000)/10) ' %'],...
    'HorizontalAlignment','left','BackgroundColor','white')
text(log10(wpr)-1, Lmax-30,...
['Відхилення при tr=' num2str(tr) 'c  ' num2str(round(ytr*10000)/100) ' %'],...
    'HorizontalAlignment','left','BackgroundColor','white')
text(log10(wpr)-1, Lmax-40,...
['Запас по фазі '  num2str(zphaze) ' град'],...
    'HorizontalAlignment','left','BackgroundColor','white')

figure(3)
step(wz,2*tr,'r')   % Перехідна функція системи з синтезованим регулятором
text(0.8*tr,...
0.3,['Перерегулювання ' num2str(round(sigma_reg*1000)/10) ' %'],...
    'HorizontalAlignment','left','BackgroundColor','white')
text(0.8*tr, 0.4,...
['Відхилення при tr=' num2str(tr) 'c  ' num2str(round(ytr*10000)/100) ' %'],...
    'HorizontalAlignment','left','BackgroundColor','white')
hold on             
grid on

figure(5)
wz=feedback(sys_balredp_1*WOBJ,1);
step(wz,2*tr)       % Перехідна функція системи з редукованим регулятором
grid on                    % на порядок нижче
[y,t]=step(wz,0:0.01:2*tr);
ytr=y(round(tr/0.01)+1)-1 % Відхилення регульованої величини в час tr
sigma_balredp_1=max(y)-1    % Перерегулювання

figure(7)
wz=feedback(sys_balredp_2*WOBJ,1);
step(wz,2*tr,'black') % Перехідна функція системи з редукованим регулятором
                      % другого порядку
[y,t]=step(wz,0:0.01:2*tr);
ytr=y(round(tr/0.01)+1)-1 % Відхилення регульованої величини в час tr
sigma_balredp_2=max(y)-1    % Перерегулювання
grid on


